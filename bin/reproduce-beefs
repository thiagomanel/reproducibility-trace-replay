#!/bin/bash -e

#
# This script executes beefs_repl with the given input directory.
# note that, depending on the scenarios of your traces, you might
# have to change some variables in scripts-lib.sh
#
# Note that a log of this execution will be created at /tmp/beefs_repl.$timing_policy.$(date +%s).log
#
# Usage: $0 timing_policy [faster | conservative] input_dir output_dir
#
# timing_policy: [faster | conservative] beefs_repl policy
# input_dir: directory with converted traces
# output_dir: directory to store the replayer results
#

if [ ! $HOME_REPLAYER ]; then
	echo "You need to export HOME_REPLAYER"
	exit 1;
fi;

source $HOME_REPLAYER/etc/scripts-lib.sh

# how many times each trace will be replayed
REPETITIONS=10;

# mount point of input data.
# This must be an entry in fstab to be mounted and umounted.
TARGET_MNT=/data

if [ $# -ne 3 ]; then
	echo "Usage: $0 timing_policy [faster | conservative] input_dir output_dir";
	exit 1;
fi

timing_policy=$1;
input_traces_dir=$2;
output_traces_dir=$3;

mkdir -p $output_traces_dir

# Note that this method receives these parameters from exec_iteration
run_beefs_repl() {
	local workload=$1;
	local nthreads=$2;
	local delay=$3;
	local nops=$4;
	local blksize=$5;
	local sample=$6;
	local nbackground=$7;

	# $baseout_dir/$nsample.$RANDOM.$workload.$nthreads.$delay.$nops.$blksize.$nsample.$nbackground".load";
	local trace_file=$(ls $input_traces_dir/$sample.*.$workload.$nthreads.$delay.$nops.$blksize.$sample.$nbackground.load.out.*)

	for repetition in `seq 1 $REPETITIONS`; do
		local output_file=$output_traces_dir/$(basename $trace_file).$repetition.$timing_policy
		echo "executing: $output_file"
		$HOME_REPLAYER/lib/clearcache.sh $TARGET_MNT;
		$HOME_REPLAYER/src/replayers/beefs-replayer/Beefs-trace-replayer/beefs_replayer $trace_file $timing_policy $nthreads 0 debug 1> $output_file.out 2> $output_file.err;
	done
}

log_file=/tmp/beefs_repl.$timing_policy.$(date +%s).log

echo "===> STARTING `date` <===" > $log_file

# exec_iteration is a method in scripts-lib.sh file
exec_iteration run_beefs_repl 2>&1 | tee $log_file;

echo "===> FINISHED `date` <===" >> $log_file
